
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Enumeration;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author sadwi
 */
public class DepartmentManager extends javax.swing.JFrame {

    String filename = "test.txt";
    DefaultMutableTreeNode root = null;
    DefaultMutableTreeNode curDepNode = null;
    DefaultMutableTreeNode curEmpNode = null;
    boolean addNewDep = false;
    boolean addNewEmp = false;

    /**
     * Creates new form Tree
     */
    public DepartmentManager() {
        initComponents();
        this.setSize(520, 380);
        root = (DefaultMutableTreeNode) (this.tree.getModel().getRoot());
        LoadData();
        TreePath path = new TreePath(root);
        tree.expandPath(path);
    }

    private void LoadData() {
        File file = new File(filename);
        if(!file.exists()){
            try {
                file.createNewFile();
            } catch (IOException ex) {
                Logger.getLogger(DepartmentManager.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        String S= "";
        StringTokenizer stk;
        try {

            FileReader f = new FileReader(filename);
            BufferedReader bf = new BufferedReader(f);
            while ((S = bf.readLine()) != null) {
                S = S.trim();
                boolean isDept = (S.charAt(S.length()- 1) == ':');
                stk = new StringTokenizer(S, "-:,");
                String code = stk.nextToken().trim();
                String name = stk.nextToken().trim();
                if (isDept) {
                    curDepNode = new DefaultMutableTreeNode(new Deparment(code, name));
                    root.add(curDepNode);
                } else {
                    int salary = Integer.parseInt(stk.nextToken().trim());
                    curEmpNode = new DefaultMutableTreeNode(new Employee(code, name, salary));
                    curDepNode.add(curEmpNode);
                }
            }
            bf.close();
            f.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void viewDeptAndEmp() {
        
        Deparment curDep = null;
        Employee curEmp = null;
        if (curDepNode != null) {
            curDep = (Deparment) (curDepNode.getUserObject());
        }
        if (curEmpNode != null) {
            curEmp = (Employee) curEmpNode.getUserObject();
        }
        this.txtDepCode.setText(curDep != null ? curDep.getDepCode() : "");
        this.txtDepName.setText(curDep != null ? curDep.getDepName() : "");
        this.txtEmpCode.setText(curEmp !=null ? curEmp.getEmpCode() : "");
        this.txtEmpName.setText(curEmp !=null ? curEmp.getEmpName() : "");
        this.txtSalary.setText(""+(curEmp !=null ? curEmp.getSalary() : ""));
        this.txtDepCode.setEditable(false);
        this.txtEmpCode.setEditable(false);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pDep = new javax.swing.JPanel();
        txtDepCode = new javax.swing.JTextField();
        btnDepRemove = new javax.swing.JButton();
        btnDepSave = new javax.swing.JButton();
        btnDepNew = new javax.swing.JButton();
        txtDepName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        savetofile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();
        pEmp = new javax.swing.JPanel();
        txtEmpCode = new javax.swing.JTextField();
        txtEmpName = new javax.swing.JTextField();
        txtSalary = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnEmpNew = new javax.swing.JToggleButton();
        btnEmpRemove = new javax.swing.JButton();
        btnEmpSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pDep.setBorder(javax.swing.BorderFactory.createTitledBorder("Phone"));

        txtDepCode.setEnabled(false);

        btnDepRemove.setText("Remove");
        btnDepRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepRemoveActionPerformed(evt);
            }
        });

        btnDepSave.setText("Save");
        btnDepSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepSaveActionPerformed(evt);
            }
        });

        btnDepNew.setText("New");
        btnDepNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepNewActionPerformed(evt);
            }
        });

        jLabel1.setText("Brand");

        jLabel2.setText("Phone");

        javax.swing.GroupLayout pDepLayout = new javax.swing.GroupLayout(pDep);
        pDep.setLayout(pDepLayout);
        pDepLayout.setHorizontalGroup(
            pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDepLayout.createSequentialGroup()
                .addGap(0, 87, Short.MAX_VALUE)
                .addGroup(pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pDepLayout.createSequentialGroup()
                        .addComponent(btnDepNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDepRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDepSave)
                        .addGap(22, 22, 22))
                    .addGroup(pDepLayout.createSequentialGroup()
                        .addGroup(pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtDepCode)
                            .addComponent(txtDepName, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        pDepLayout.setVerticalGroup(
            pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDepLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDepCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDepName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(pDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDepNew)
                    .addComponent(btnDepRemove)
                    .addComponent(btnDepSave))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        savetofile.setText("Save to file");
        savetofile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savetofileActionPerformed(evt);
            }
        });

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Deparments");
        tree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        tree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                treeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tree);

        pEmp.setBorder(javax.swing.BorderFactory.createTitledBorder("Phone Details"));

        txtEmpCode.setEnabled(false);
        txtEmpCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpCodeActionPerformed(evt);
            }
        });

        jLabel3.setText("Name Phone");

        jLabel4.setText("CPU");

        jLabel5.setText("Price");

        btnEmpNew.setText("New");
        btnEmpNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmpNewActionPerformed(evt);
            }
        });

        btnEmpRemove.setText("Remove");
        btnEmpRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmpRemoveActionPerformed(evt);
            }
        });

        btnEmpSave.setText("Save");
        btnEmpSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmpSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pEmpLayout = new javax.swing.GroupLayout(pEmp);
        pEmp.setLayout(pEmpLayout);
        pEmpLayout.setHorizontalGroup(
            pEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pEmpLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtEmpCode, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addComponent(txtEmpName)
                    .addComponent(txtSalary))
                .addContainerGap())
            .addGroup(pEmpLayout.createSequentialGroup()
                .addGap(0, 63, Short.MAX_VALUE)
                .addComponent(btnEmpNew)
                .addGap(18, 18, 18)
                .addComponent(btnEmpRemove)
                .addGap(18, 18, 18)
                .addComponent(btnEmpSave)
                .addGap(29, 29, 29))
        );
        pEmpLayout.setVerticalGroup(
            pEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pEmpLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmpCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEmpNew)
                    .addComponent(btnEmpRemove)
                    .addComponent(btnEmpSave)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(savetofile)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pDep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pEmp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pEmp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(savetofile)))
                .addGap(273, 273, 273))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDepNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepNewActionPerformed
        // TODO add your handling code here:
        this.addNewDep=true;
        this.txtDepCode.setText("");
        this.txtDepName.setText("");
        this.txtEmpCode.setText("");
        this.txtEmpName.setText("");
        this.txtSalary.setText("");
        this.txtDepCode.setEnabled(true);
        this.txtDepCode.setEditable(true);
        this.txtDepCode.requestFocus();
        
        
    }//GEN-LAST:event_btnDepNewActionPerformed

    private void treeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeMouseClicked
        // TODO add your handling code here:
        tree.cancelEditing();
        TreePath path = tree.getSelectionPath();
        if(path==null) return;
        DefaultMutableTreeNode selectedNode=null;
        selectedNode= (DefaultMutableTreeNode) (path.getLastPathComponent());
        
        Object selectedObj = selectedNode.getUserObject();
        if(selectedNode==root)
            this.curDepNode=this.curEmpNode=null;
        else{
            if(selectedObj instanceof Deparment){
                this.curDepNode=selectedNode;
                this.curEmpNode=null;
            }
            else if( selectedObj instanceof Employee){
                curEmpNode=selectedNode;
                curDepNode=(DefaultMutableTreeNode) (selectedNode.getParent());
            }
        }
        viewDeptAndEmp();
    }//GEN-LAST:event_treeMouseClicked

    private void btnDepRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepRemoveActionPerformed
        // TODO add your handling code here:
        if(this.curDepNode.getChildCount()>0){
            String msg="Remove  all employees before deleting a department.";
            JOptionPane.showMessageDialog(this, msg);
        }
        else{
            int response = JOptionPane.showConfirmDialog(this, "Delete this department- OK?");
            if(response==JOptionPane.OK_OPTION){
                root.remove(this.curDepNode);
                tree.updateUI();
            }
        }
    }//GEN-LAST:event_btnDepRemoveActionPerformed
    private boolean validDepDetails(){
        return true;
    }
    private void btnDepSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepSaveActionPerformed
        // TODO add your handling code here:
        String code = this.txtDepCode.getText().trim().toUpperCase();
        txtDepCode.setText(code);
        String name = this.txtDepName.getText().trim();
        txtDepName.setText(name);
        if(! validDepDetails()) return;
        if(addNewEmp==true){
            Deparment newDep = new Deparment(code, name);
            root.add(new DefaultMutableTreeNode(newDep));
        }
        else{
            ((Deparment)curDepNode.getUserObject()).setDepName(name);
        }
        this.tree.updateUI();
        this.addNewEmp=false;
    }//GEN-LAST:event_btnDepSaveActionPerformed

    private void savetofileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savetofileActionPerformed
        // TODO add your handling code here:
        if(root.getChildCount()==0) return;
        String S;
        try {
            FileWriter f = new FileWriter(filename);
            PrintWriter pf= new PrintWriter(f);
            Enumeration depts =root.children();
            while (depts.hasMoreElements()) {                
                DefaultMutableTreeNode depNode = (DefaultMutableTreeNode) depts.nextElement();
                Deparment dept= (Deparment) depNode.getUserObject();
                S = dept.getDepCode()+"-"+dept.getDepName()+":";
                pf.println(S);
                Enumeration emps = depNode.children();
                while (emps.hasMoreElements()) {                    
                    DefaultMutableTreeNode empNode = (DefaultMutableTreeNode) emps.nextElement();
                    Employee emp = (Employee) empNode.getUserObject();
                    S = emp.getEmpCode()+","+emp.getEmpName()+","+emp.getSalary();
                    pf.println(S);
                }
            }
            pf.close();
            f.close();
            JOptionPane.showMessageDialog(this, "Data saved to the file"+filename);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_savetofileActionPerformed

    private void btnEmpNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmpNewActionPerformed
        // TODO add your handling code here:
        this.addNewEmp=true;
        this.txtEmpCode.setText("");
        this.txtEmpName.setText("");
        this.txtSalary.setText("");
        this.txtEmpCode.setEnabled(true);
        this.txtEmpCode.setEditable(true);
        this.txtEmpCode.requestFocus();
    }//GEN-LAST:event_btnEmpNewActionPerformed

    private void btnEmpRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmpRemoveActionPerformed
        // TODO add your handling code here:
        if(this.curEmpNode != null){
            int response =JOptionPane.showConfirmDialog(this, "Delete employee -OK?");
            if(response == JOptionPane.OK_OPTION){
                curDepNode.remove(this.curEmpNode);
                tree.updateUI();
            }
        }
    }//GEN-LAST:event_btnEmpRemoveActionPerformed
    private boolean validEmpDetail(){
        return true;
    }
    private void btnEmpSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmpSaveActionPerformed
        // TODO add your handling code here:
        String code =this.txtEmpCode.getText().trim().toUpperCase();
        txtEmpCode.setText(code);
        String name = this.txtEmpName.getText().trim();
        txtEmpName.setText(name);
        String SalaryStr=this.txtSalary.getText().trim();
        txtSalary.setText(SalaryStr);
        int sal=Integer.parseInt(SalaryStr);
        if(!validEmpDetail()) return;
        if(addNewEmp==true){
            Employee newEmp = new Employee(code, name, sal);
            curDepNode.add(new DefaultMutableTreeNode(newEmp));
        }
        else{
            Employee emp=(Employee) curEmpNode.getUserObject();
            emp.setEmpName(name);
            emp.setSalary(sal);
        }
        this.tree.updateUI();
        this.addNewEmp=false;
    }//GEN-LAST:event_btnEmpSaveActionPerformed

    private void txtEmpCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmpCodeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DepartmentManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DepartmentManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DepartmentManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DepartmentManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DepartmentManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDepNew;
    private javax.swing.JButton btnDepRemove;
    private javax.swing.JButton btnDepSave;
    private javax.swing.JToggleButton btnEmpNew;
    private javax.swing.JButton btnEmpRemove;
    private javax.swing.JButton btnEmpSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pDep;
    private javax.swing.JPanel pEmp;
    private javax.swing.JButton savetofile;
    private javax.swing.JTree tree;
    private javax.swing.JTextField txtDepCode;
    private javax.swing.JTextField txtDepName;
    private javax.swing.JTextField txtEmpCode;
    private javax.swing.JTextField txtEmpName;
    private javax.swing.JTextField txtSalary;
    // End of variables declaration//GEN-END:variables

    
}
